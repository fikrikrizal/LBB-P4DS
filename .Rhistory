head(vids)
# Inspect Data Type
str(vids)
# Please type your code
head(vids$trending_date)
# Please type your code
as.Date(head(vids$trending_date), format = "%y.%d.%m")
# Please type your code
head(vids$publish_time)
# as.Date()
as.Date(head(vids$publish_time), format="%Y-%m-%dT%H:%M:%S")
# Please type your code
as.POSIXlt(head(vids$publish_time), tryFormats = "%Y-%m-%dT%H:%M:%OS")
# Cek tipe data
class(as.POSIXlt(head(vids$publish_time), tryFormats = "%Y-%m-%dT%H:%M:%OS"))
#install.packages("lubridate")
library(lubridate)
# Please type your code
# Format date dari kolom trending_date = Year-Day-Month
vids$trending_date <- ydm(vids$trending_date)
class(vids$trending_date)
# Please type your code
# Format date dari kolom publish_date = Year-Month-Day-Hour-Month-Day
ymd_hms(head(vids$publish_time))
# Please run code down below
head(ymd_hms(vids$publish_time, tz = "Asia/Jakarta"))
# Please run code down below
head(ymd_hms(vids$publish_time, tz = "America/New_York"))
# Please type your code
vids$publish_time <- ymd_hms(vids$publish_time, tz = "America/New_York")
class(vids$publish_time)
# Please run the code down below
most_view <- vids[vids$views == max(vids$views), ]
most_view
# Please type your code
year(most_view$trending_date)
# Please type your code
month(most_view$publish_time)
# Please type your code
month.name[12]
# ini dari library lubridate
month(most_view$publish_time, label = T, abbr = F) # abbr =F agar tidak ada penyingkatan
# months ini dari Base R
months(most_view$publish_time)
# Please type your code
day(most_view$trending_date)
# Please type your code
wday(most_view$trending_date, label = T, abbr = F)
# untuk set local time secara manual
# Sys.setlocale("LC_TIME","English")
# Please type your code
# jam
hour(most_view$publish_time)
# menit
minute(most_view$publish_time)
# detik
second(most_view$publish_time)
# Please type your code
vids$publish_day <-wday(vids$publish_time, label=T, abbr = F)
# Please type your code
vids$publish_hour <- hour(vids$publish_time)
# Please type your code
vids$time_to_trend <- as.numeric(vids$trending_date-date(vids$publish_time))
head(vids)
# Please run the code down below
head(vids$publish_hour)
# Please run the code down below
convert_hour <- function(y){
if(y <= 8)
{
y <- "12am to 8am" # Untuk video dengan publish_hour antara tengah malam hingga jam 8 pagi
}
else if(y > 8 & y < 16)
{
y <- "8am to 3pm" # untuk video di atas jam 8 pagi hingga jam 3 sore
}
else
{
y <- "3pm to 12am" # untuk video di atas jam 3 sore sampai tengah malam
}
}
# sapply -> input (list/vector) output vector
# sapply(X = vids$publish_hour, FUN = convert_hour)
# Please run the code down below
vids$publish_when <- sapply(X = vids$publish_hour,
FUN = convert_hour)
head(vids$publish_when)
# Please run the code down below
str(vids$publish_when)
# Please type your code down below
vids$publish_when <- as.factor(vids$publish_when)
# Please run the code down belom
vids[ , c("channel_title", "category_id")]
# Please run the code down belom
data <- c("1", "2", "4")
sapply(X = data, # data/kolom yang ingin diubah
FUN = switch, # fungsi
"1" = "Education",
"2" = "Travel",
"4" = "Music")
# Please run the code down below
vids$category_id <- sapply(X = as.character(vids$category_id),
FUN = switch,
"1" = "Film and Animation",
"2" = "Autos and Vehicles",
"10" = "Music",
"15" = "Pets and Animals",
"17" = "Sports",
"19" = "Travel and Events",
"20" = "Gaming",
"22" = "People and Blogs",
"23" = "Comedy",
"24" = "Entertainment",
"25" = "News and Politics",
"26" = "Howto and Style",
"27" = "Education",
"28" = "Science and Technology",
"29" = "Nonprofit and Activism",
"43" = "Shows")
vids$category_id <- as.factor(vids$category_id)
vids[ , c("channel_title", "category_id")]
# Please type your code down below
# lapply(vids[,c("likes","dislikes")], as.integer)
# Please run the code down below
length(vids$title)
length(unique(vids$title))
# Please run the code down below
df <- data.frame(nama = c("Fafilia", "Tria", "Tria", "Rany", "Fafilia", "Tomy"),
nilai = c(70, 95, 85, 80, 70, 90))
df
# Please run the code down belom
df <- df[order(df$nilai, decreasing = T), ]
df
# Please run the code down belom
df[match(unique(df$nama), df$nama),]
# Please type your code down below
vids.unik <- vids[match(unique(vids$title),vids$title),]
vids.unik$publish_when <- factor(vids.unik$publish_when, levels = c("12am to 8am","8am to 3pm","3pm to 12am"))
# Please type your code down below
plot(x=vids.unik$publish_when)
# Please type your code down below
vids.unik$like_ratio <- vids.unik$likes/vids.unik$views
# Please type your code down below
# vids.unik[vids.unik$category_id=="Autos and Vehicles"|vids.unik$category_id=="Gaming"|vids.unik$category_id=="Travel and Events",]
vids.agt <- vids.unik[vids.unik$category_id %in% c("Autos and Vehicles", "Gaming","Travel and Events"),]
# Please type your code down below
hist(vids.agt$like_ratio)
# Please type your code down below
plot(x=vids.agt$category_id, y=vids.agt$like_ratio)
vids.agt$category_id <- droplevels(vids.agt$category_id)
plot(x=vids.agt$category_id, y=vids.agt$like_ratio)
# Please type your code down below
vids.agt$dislike_ratio <- vids.agt$dislikes/vids.agt$views
# Please type your code down below
plot(x=vids.agt$like_ratio,
y=vids.agt$dislike_ratio,
col=vids.agt$category_id, # mengatur warna
pch=16) # pch untuk mengatur bentuk dari point scatter
# Please type your code down below
plot(x=vids.agt$like_ratio,
y=vids.agt$dislike_ratio,
col=vids.agt$category_id, # mengatur warna
pch=16) # pch untuk mengatur bentuk dari point scatter
legend(x="right",
legend=levels(vids.agt$category_id),
fill=1:3)
# Please type your code down below
plot(x=vids.agt$like_ratio,
y=vids.agt$dislike_ratio,
col=vids.agt$category_id, # mengatur warna
pch=16) # pch untuk mengatur bentuk dari point scatter
legend(x="right", # mengatur posisi legend
legend=levels(vids.agt$category_id), # level kategori yang ditampilkan di legend
fill=1:3) # mengatur warna untuk masing-masing kategori di legend
abline(lm(dislike_ratio~like_ratio, data = vids.agt), col="red") # membuat garis trend warna merah
cor(vids.agt$like_ratio,vids.agt$dislike_ratio)
# Please type your code down below
trending <- as.data.frame(table(vids.unik$trending_date))
# Please type your code down below
trending$Var1 <- ymd(trending$Var1)
# Please type your code down below
plot(x=trending$Var1, y=trending$Freq, type = "l") # type untuk memilih jenis plot berupa line plot karena default untuk plot(kategorik, numerik) adalah boxplot
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
fig.align = "center",
message = FALSE,
warning = FALSE,
comment = "#>"
)
rating <- read.csv("Data Input/tourism_rating.csv")
place <- read.csv("Data Input/tourism_with_id.csv")
user <- read.csv("Data Input/user.csv")
head(rating)
dim(rating)
names(rating)
head(place)
dim(place)
names(place)
head(user)
dim(user)
names(user)
str(rating)
str(place)
str(user)
place <- place[,!names(place)%in% c("X","X.1","Time_Minutes"), drop=F]
head(place)
place_yogya <- place[place$City=="Yogyakarta",]
head(place_yogya)
place_yogya_merge <- merge(place_yogya,rating,by.x = "Place_Id", by.y = "Place_Id")
place_yogya_merge <- merge(place_yogya_merge,user,by.x = "User_Id", by.y = "User_Id")
head(place_yogya_merge)
place_yogya_rating_freq <- aggregate(x=Place_Ratings~Place_Name,data = place_yogya_merge, FUN = length)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
fig.align = "center",
message = FALSE,
warning = FALSE,
comment = "#>"
)
rating <- read.csv("Data Input/tourism_rating.csv")
place <- read.csv("Data Input/tourism_with_id.csv")
user <- read.csv("Data Input/user.csv")
head(rating)
dim(rating)
names(rating)
head(place)
dim(place)
names(place)
head(user)
dim(user)
names(user)
str(rating)
str(place)
str(user)
place <- place[,!names(place)%in% c("X","X.1","Time_Minutes"), drop=F]
head(place)
place_yogya <- place[place$City=="Yogyakarta",]
head(place_yogya)
place_yogya_merge <- merge(place_yogya,rating,by.x = "Place_Id", by.y = "Place_Id")
place_yogya_merge <- merge(place_yogya_merge,user,by.x = "User_Id", by.y = "User_Id")
head(place_yogya_merge)
place_yogya_rating_freq <- aggregate(x=Place_Ratings~Place_Name,data = place_yogya_merge, FUN = length)
most_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
plot(x=most_rated_yogya$Place_Name, y=most_rated_yogya$Place_Ratings)
tourism_origin <- as.data.frame(
table(place_yogya_merge$Location))
plot(x=tourism_origin$Freq, y=tourism_origin$Var1)
place_yogya_category$Category <- as.factor(place_yogya_category$Category)
place_yogya_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
place_yogya_category$Category <- as.factor(place_yogya_category$Category)
plot(place_yogya_category)
plot(x=place_yogya_category$Place_Name, y=place_yogya_category$Category)
place_yogya$Category <- as.factor(place_yogya$Category)
plot(place_yogya$Category)
plot(y=place_yogya$Category)
plot(place_yogya$Category)
barplot(x=place_yogya_category$Place_Name, y=place_yogya_category$Category)
barplot(x=place_yogya_category$Place_Name, y=place_yogya_category$Category)
barplot(Place_Name~Category, place_yogya_category)
barplot(Category~Place_Name, place_yogya_category)
barplot(Place_Name~Category, place_yogya_category)
place_yogya_category <- sort(aggregate(x=Place_Name~Category,data = place_yogya, FUN = length),decreasing = T)
place_yogya_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
sort(place_yogya_category$Place_Name, decreasing = T)
place_yogya_category[sort(place_yogya_category$Place_Name, decreasing = T),]
place_yogya_category[order(place_yogya_category$Place_Name, decreasing = T),]
place_yogya_category <- place_yogya_category[order(place_yogya_category$Place_Name, decreasing = T),]
barplot(Place_Name~Category, place_yogya_category)
place_yogya_category <- place_yogya_category[order(place_yogya_category$Place_Name, decreasing = T),]
place_yogya_category
barplot(Place_Name~Category, place_yogya_category)
plot(place_yogya$Category)
place_yogya_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
place_yogya_category
aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
plot(place_yogya$Category)
barplot(Place_Name~Place_Ratings, most_rated_yogya)
most_rated_yogya
barplot(Place_Name~Place_Ratings, most_rated_yogya)
str(most_rated_yogya)
as.factor(most_rated_yogya$Place_Ratings)
most_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
as.factor(most_rated_yogya$Place_Ratings)
barplot(Place_Name~Place_Ratings, most_rated_yogya)
barplot(Place_Name~Place_Ratings, most_rated_yogya)
most_rated_yogya
barplot(Place_Ratings~Place_Name, most_rated_yogya)
plot(x=most_rated_yogya$Place_Ratings, y=most_rated_yogya$Place_Name)
most_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
as.factor(most_rated_yogya$Place_Ratings)
plot(x=most_rated_yogya$Place_Ratings, y=most_rated_yogya$Place_Name)
plot(xtabs(Place_Ratings~Place_Name, most_rated_yogya))
plot(xtabs(Place_Name~Place_Ratings, most_rated_yogya))
plot(xtabs(Place_Ratings~Place_Name, most_rated_yogya))
most_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
plot(xtabs(Place_Ratings~Place_Name, most_rated_yogya))
place_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
place_category
place_category <- place_category[sort(place_category$Place_Name,decreasing = T),]
place_category
place_category <- place_category[order(place_category$Place_Name,decreasing = T),]
place_category
place_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
place_category
place_category <- place_category[order(place_category$Place_Name,decreasing = T),][5]
place_category <- aggregate(x=Place_Name~Category,data = place_yogya, FUN = length)
place_category[order(place_category$Place_Name,decreasing = T)
table(place_yogya$Category)
table(place_yogya$Category)
as.data.frame(table(place_yogya$Category))
as.data.frame(table(place_yogya$Category))
sort(table(place_yogya$Category),decreasing = T)
as.data.frame(sort(table(place_yogya$Category),decreasing = T))
plot(as.data.frame(sort(table(place_yogya$Category),decreasing = T)))
as.data.frame(sort(table(place_yogya$Category),decreasing = T))
number_category <- as.data.frame(sort(table(place_yogya$Category),decreasing = T))
number_category
number_category <- as.data.frame(sort(table(place_yogya$Category),decreasing = T))
number_category
barplot(Var1~Freq, number_category)
barplot(Freq~Var1, number_category)
number_category
barplot(Freq~Var1, number_category)
aggregate(x=Price~Category,data = place_yogya, FUN = mean)
aggregate(x=Price~Place_Name,data = place_yogya[place_yogya$Category%in%"Budaya",], FUN = mean)
aggregate(x=Price~Place_Name,data = place_yogya[place_yogya$Category%in%"Budaya",], FUN = max)
place_yogya[place_yogya$Price==0,2]
plot(x=place_yogya$Category, y=place_yogya$Price)
aggregate(x=Price~Place_Name,data = place_yogya, FUN = max)
aggregate(x=Price~Place_Name,data = place_yogya, FUN = max)
aggregate(x=Price~Place_Name,data = place_yogya, FUN = min)
aggregate(x=Price~Place_Name,data = place_yogya, FUN = max)
place_price <- aggregate(x=Price~Place_Name,data = place_yogya, FUN = max)
place_price
place_price[order(place_price$Price,decreasing = T)]
place_price[order(place_price$Price,decreasing = T),]
place_price[order(place_price$Price,decreasing = T),5]
place_price[order(place_price$Price,decreasing = T),][5]
place_price[order(place_price$Price,decreasing = T),][0:5,]
aggregate(x=Price~Category,data = place_yogya, FUN = mean)
plot(x=place_yogya$Category, y=place_yogya$Price)
place_yogya[place_yogya$Price==0,]
place_yogya[place_yogya$Price==0,4]
place_yogya[place_yogya$Price==0,2]
unique(place_yogya[place_yogya$Price==0,4])
table(place_yogya[place_yogya$Price==0,4])
as.data.frame(table(place_yogya[place_yogya$Price==0,4]))
most_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
most_rated_yogya
table(place_yogya$Place_Name)
place_yogya[order(place_yogya$Rating,decreasing = T),]
place_yogya[order(place_yogya$Rating,decreasing = T),2&7]
place_yogya[order(place_yogya$Rating,decreasing = T),][2]
place_yogya[order(place_yogya$Rating,decreasing = T),][2&7]
place_yogya[order(place_yogya$Rating,decreasing = T),1]
place_yogya[order(place_yogya$Rating,decreasing = T),2]
place_yogya[order(place_yogya$Rating,decreasing = T),]
place_yogya[order(place_yogya$Rating,decreasing = T),][1:5]
place_yogya[order(place_yogya$Rating,decreasing = T),!names(place_yogya)%in%c("Place_Name","Rating")]
place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")]
place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")][,1:10]
place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")][,10]
place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")]
head(place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")],10)
place_price[place_price$Price!=0,]
order(place_price[place_price$Price!=0,],decreasing = T)
place_price[order(place_price[place_price$Price!=0,],decreasing = T),]
order(place_price[place_price$Price!=0,],decreasing = T)
place_price[place_price$Price!=0,]
place_price[order(place_price[place_price$Price!=0,],decreasing = T),][0:5,]
place_price[place_price$Price!=0,]
place_price_charge[order(place_price_charge$Price,decreasing = T),][0:5,]
place_price_charge <- place_price[place_price$Price!=0,]
place_price_charge[order(place_price_charge$Price,decreasing = T),][0:5,]
place_price_charge[order(place_price_charge$Price,decreasing = F),][0:5,]
plot(x=place_yogya$Category, y=place_yogya$Price)
graphics::plot(x=place_yogya$Category, y=place_yogya$Price)
place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),]
place_yogya_rating_freq <- place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),]
top10_rated_yogya <- head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
as.factor(top10_rated_yogya$Place_Ratings)
plot(xtabs(Place_Ratings~Place_Name, top10_rated_yogya))
top10_rated_yogya
place_yogya_rating_freq
place_yogya_rating_freq <- aggregate(x=Place_Ratings~Place_Name,data = place_yogya_merge, FUN = length)
place_yogya_rating_freq
head(place_yogya_rating_freq[order(place_yogya_rating_freq$Place_Ratings,decreasing = T),],10)
top5_rated_yogya <- head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
as.factor(top10_rated_yogya$Place_Ratings)
plot(xtabs(Place_Ratings~Place_Name, top10_rated_yogya))
top5_rated_yogya <- head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
top5_rated_yogya
plot(xtabs(Place_Ratings~Place_Name, top10_rated_yogya))
plot(top10_rated_yogya)
top10_rated_yogya
top5_rated_yogya <- head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
as.factor(top5_rated_yogya$Place_Ratings)
plot(xtabs(Place_Ratings~Place_Name, top5_rated_yogya))
top5_rated_yogya
top5_rated_yogya <- head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
as.factor(top5_rated_yogya$Place_Ratings)
plot(xtabs(Place_Ratings~Place_Name, top5_rated_yogya))
top5_rated_yogya <- head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
as.factor(top5_rated_yogya$Place_Ratings)
plot(xtabs(Place_Ratings~Place_Name, top5_rated_yogya))
plot(x=top5_rated_yogya$Place_Name,y=top5_rated_yogya$Place_Ratings)
plot(y=top5_rated_yogya$Place_Name,x=top5_rated_yogya$Place_Ratings)
plot(x=top5_rated_yogya$Place_Name)
plot(x=place_yogya$Place_Name)
plot(x=place_yogya$Category)
plot(y=place_yogya$Category)
plot(x=place_yogya$Category)
place_yogya$Place_Name <- as.factor(place_yogya$Place_Name)
place_yogya$Category <- as.factor(place_yogya$Category)
place_yogya_merge <- merge(place_yogya,rating,by.x = "Place_Id", by.y = "Place_Id")
place_yogya_merge <- merge(place_yogya_merge,user,by.x = "User_Id", by.y = "User_Id")
head(place_yogya_merge)
place_yogya_rating_freq <- aggregate(x=Place_Ratings~Place_Name,
data = place_yogya_merge,
FUN = length)
plot(x=place_yogya$Place_Name)
head(
place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
head(place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
top5_rated_yogya <- c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta")
plot(x=place_yogya[place_yogya$Place_Name%in%top5_rated_yogya])
top5_rated_yogya <- c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta")
plot(x=place_yogya[place_yogya$Place_Name%in%{top5_rated_yogya}])
plot(x=place_yogya[place_yogya$Place_Name%in%{top5_rated_yogya}])
plot(x=place_yogya[place_yogya$Place_Name%in%c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta")])
plot(x=place_yogya[place_yogya$Place_Name%in%c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta"),])
place_yogya[place_yogya$Place_Name%in%c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta"),]
place_yogya_merge[place_yogya_merge$Place_Name%in%c("Pantai Parangtritis","Pantai Kesirat","Taman Sungai Mudal","Geoforest Watu Payung Turunan","Museum Benteng Vredeburg Yogyakarta"),]
head(place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")],10)
head(place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")],5)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
fig.align = "center",
message = FALSE,
warning = FALSE,
comment = "#>"
)
rating <- read.csv("Data Input/tourism_rating.csv")
place <- read.csv("Data Input/tourism_with_id.csv")
user <- read.csv("Data Input/user.csv")
head(rating)
dim(rating)
names(rating)
head(place)
dim(place)
names(place)
head(user)
dim(user)
names(user)
str(rating)
str(place)
str(user)
place <- place[,!names(place)%in% c("X","X.1","Time_Minutes"), drop=F]
head(place)
place_yogya <- place[place$City=="Yogyakarta",]
head(place_yogya)
place_yogya$Place_Name <- as.factor(place_yogya$Place_Name)
place_yogya$Category <- as.factor(place_yogya$Category)
place_yogya_merge <- merge(place_yogya,rating,by.x = "Place_Id", by.y = "Place_Id")
place_yogya_merge <- merge(place_yogya_merge,user,by.x = "User_Id", by.y = "User_Id")
head(place_yogya_merge)
place_yogya_rating_freq <- aggregate(x=Place_Ratings~Place_Name,
data = place_yogya_merge,
FUN = length)
head(place_yogya_rating_freq[
order(place_yogya_rating_freq$Place_Ratings,
decreasing = T),],5)
head(place_yogya[order(place_yogya$Rating,decreasing = T),names(place_yogya)%in%c("Place_Name","Rating")],5)
number_category <- as.data.frame(sort(table(place_yogya$Category),decreasing = T))
number_category
barplot(Freq~Var1, number_category)
aggregate(x=Price~Category,data = place_yogya, FUN = mean)
place_price <- aggregate(x=Price~Place_Name,data = place_yogya, FUN = max)
place_price[order(place_price$Price,decreasing = T),][0:5,]
place_price_charge <- place_price[place_price$Price!=0,]
place_price_charge[order(place_price_charge$Price,decreasing = F),][0:5,]
place_yogya[place_yogya$Price==0,2]
as.data.frame(table(place_yogya[place_yogya$Price==0,4]))
table(place_yogya_merge$Location)
sort(table(place_yogya_merge$Location),decreasing = T)
sort(table(place_yogya_merge$Location),decreasing = T)[1:5]
as.data.frame(sort(table(place_yogya_merge$Location),decreasing = T)[1:5])
